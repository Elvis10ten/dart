// source: TestDetails.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var AtomicTest_pb = require('./AtomicTest_pb.js');
goog.object.extend(proto, AtomicTest_pb);
var AtomicResult_pb = require('./AtomicResult_pb.js');
goog.object.extend(proto, AtomicResult_pb);
var TestSummaryProfile_pb = require('./TestSummaryProfile_pb.js');
goog.object.extend(proto, TestSummaryProfile_pb);
var Artifact_pb = require('./Artifact_pb.js');
goog.object.extend(proto, Artifact_pb);
goog.exportSymbol('proto.reports.RetryDetails', null, global);
goog.exportSymbol('proto.reports.TestDetails', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reports.TestDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reports.TestDetails.repeatedFields_, null);
};
goog.inherits(proto.reports.TestDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reports.TestDetails.displayName = 'proto.reports.TestDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.reports.RetryDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.reports.RetryDetails.repeatedFields_, null);
};
goog.inherits(proto.reports.RetryDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.reports.RetryDetails.displayName = 'proto.reports.RetryDetails';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reports.TestDetails.repeatedFields_ = [4,5,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reports.TestDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.reports.TestDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reports.TestDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reports.TestDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    atomictest: (f = msg.getAtomictest()) && AtomicTest_pb.AtomicTest.toObject(includeInstance, f),
    summaryprofile: (f = msg.getSummaryprofile()) && TestSummaryProfile_pb.TestSummaryProfile.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    screenshotsList: jspb.Message.toObjectList(msg.getScreenshotsList(),
    Artifact_pb.Artifact.toObject, includeInstance),
    video: (f = msg.getVideo()) && Artifact_pb.Artifact.toObject(includeInstance, f),
    othersList: jspb.Message.toObjectList(msg.getOthersList(),
    Artifact_pb.Artifact.toObject, includeInstance),
    retriesList: jspb.Message.toObjectList(msg.getRetriesList(),
    proto.reports.RetryDetails.toObject, includeInstance),
    approximatecost: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    currencysymbol: jspb.Message.getFieldWithDefault(msg, 8, ""),
    stacktrace: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reports.TestDetails}
 */
proto.reports.TestDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reports.TestDetails;
  return proto.reports.TestDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reports.TestDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reports.TestDetails}
 */
proto.reports.TestDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new AtomicTest_pb.AtomicTest;
      reader.readMessage(value,AtomicTest_pb.AtomicTest.deserializeBinaryFromReader);
      msg.setAtomictest(value);
      break;
    case 2:
      var value = new TestSummaryProfile_pb.TestSummaryProfile;
      reader.readMessage(value,TestSummaryProfile_pb.TestSummaryProfile.deserializeBinaryFromReader);
      msg.setSummaryprofile(value);
      break;
    case 3:
      var value = /** @type {!proto.tests.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = new Artifact_pb.Artifact;
      reader.readMessage(value,Artifact_pb.Artifact.deserializeBinaryFromReader);
      msg.addScreenshots(value);
      break;
    case 6:
      var value = new Artifact_pb.Artifact;
      reader.readMessage(value,Artifact_pb.Artifact.deserializeBinaryFromReader);
      msg.setVideo(value);
      break;
    case 5:
      var value = new Artifact_pb.Artifact;
      reader.readMessage(value,Artifact_pb.Artifact.deserializeBinaryFromReader);
      msg.addOthers(value);
      break;
    case 10:
      var value = new proto.reports.RetryDetails;
      reader.readMessage(value,proto.reports.RetryDetails.deserializeBinaryFromReader);
      msg.addRetries(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setApproximatecost(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencysymbol(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStacktrace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reports.TestDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reports.TestDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reports.TestDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reports.TestDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAtomictest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      AtomicTest_pb.AtomicTest.serializeBinaryToWriter
    );
  }
  f = message.getSummaryprofile();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      TestSummaryProfile_pb.TestSummaryProfile.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getScreenshotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      Artifact_pb.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getVideo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      Artifact_pb.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getOthersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      Artifact_pb.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getRetriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.reports.RetryDetails.serializeBinaryToWriter
    );
  }
  f = message.getApproximatecost();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getCurrencysymbol();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStacktrace();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional tests.AtomicTest atomicTest = 1;
 * @return {?proto.tests.AtomicTest}
 */
proto.reports.TestDetails.prototype.getAtomictest = function() {
  return /** @type{?proto.tests.AtomicTest} */ (
    jspb.Message.getWrapperField(this, AtomicTest_pb.AtomicTest, 1));
};


/**
 * @param {?proto.tests.AtomicTest|undefined} value
 * @return {!proto.reports.TestDetails} returns this
*/
proto.reports.TestDetails.prototype.setAtomictest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reports.TestDetails} returns this
 */
proto.reports.TestDetails.prototype.clearAtomictest = function() {
  return this.setAtomictest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reports.TestDetails.prototype.hasAtomictest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional tests.TestSummaryProfile summaryProfile = 2;
 * @return {?proto.tests.TestSummaryProfile}
 */
proto.reports.TestDetails.prototype.getSummaryprofile = function() {
  return /** @type{?proto.tests.TestSummaryProfile} */ (
    jspb.Message.getWrapperField(this, TestSummaryProfile_pb.TestSummaryProfile, 2));
};


/**
 * @param {?proto.tests.TestSummaryProfile|undefined} value
 * @return {!proto.reports.TestDetails} returns this
*/
proto.reports.TestDetails.prototype.setSummaryprofile = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reports.TestDetails} returns this
 */
proto.reports.TestDetails.prototype.clearSummaryprofile = function() {
  return this.setSummaryprofile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reports.TestDetails.prototype.hasSummaryprofile = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional tests.Status status = 3;
 * @return {!proto.tests.Status}
 */
proto.reports.TestDetails.prototype.getStatus = function() {
  return /** @type {!proto.tests.Status} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.tests.Status} value
 * @return {!proto.reports.TestDetails} returns this
 */
proto.reports.TestDetails.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated tests.Artifact screenshots = 4;
 * @return {!Array<!proto.tests.Artifact>}
 */
proto.reports.TestDetails.prototype.getScreenshotsList = function() {
  return /** @type{!Array<!proto.tests.Artifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, Artifact_pb.Artifact, 4));
};


/**
 * @param {!Array<!proto.tests.Artifact>} value
 * @return {!proto.reports.TestDetails} returns this
*/
proto.reports.TestDetails.prototype.setScreenshotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.tests.Artifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tests.Artifact}
 */
proto.reports.TestDetails.prototype.addScreenshots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tests.Artifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reports.TestDetails} returns this
 */
proto.reports.TestDetails.prototype.clearScreenshotsList = function() {
  return this.setScreenshotsList([]);
};


/**
 * optional tests.Artifact video = 6;
 * @return {?proto.tests.Artifact}
 */
proto.reports.TestDetails.prototype.getVideo = function() {
  return /** @type{?proto.tests.Artifact} */ (
    jspb.Message.getWrapperField(this, Artifact_pb.Artifact, 6));
};


/**
 * @param {?proto.tests.Artifact|undefined} value
 * @return {!proto.reports.TestDetails} returns this
*/
proto.reports.TestDetails.prototype.setVideo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reports.TestDetails} returns this
 */
proto.reports.TestDetails.prototype.clearVideo = function() {
  return this.setVideo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reports.TestDetails.prototype.hasVideo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated tests.Artifact others = 5;
 * @return {!Array<!proto.tests.Artifact>}
 */
proto.reports.TestDetails.prototype.getOthersList = function() {
  return /** @type{!Array<!proto.tests.Artifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, Artifact_pb.Artifact, 5));
};


/**
 * @param {!Array<!proto.tests.Artifact>} value
 * @return {!proto.reports.TestDetails} returns this
*/
proto.reports.TestDetails.prototype.setOthersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.tests.Artifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tests.Artifact}
 */
proto.reports.TestDetails.prototype.addOthers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.tests.Artifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reports.TestDetails} returns this
 */
proto.reports.TestDetails.prototype.clearOthersList = function() {
  return this.setOthersList([]);
};


/**
 * repeated RetryDetails retries = 10;
 * @return {!Array<!proto.reports.RetryDetails>}
 */
proto.reports.TestDetails.prototype.getRetriesList = function() {
  return /** @type{!Array<!proto.reports.RetryDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.reports.RetryDetails, 10));
};


/**
 * @param {!Array<!proto.reports.RetryDetails>} value
 * @return {!proto.reports.TestDetails} returns this
*/
proto.reports.TestDetails.prototype.setRetriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.reports.RetryDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.reports.RetryDetails}
 */
proto.reports.TestDetails.prototype.addRetries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.reports.RetryDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reports.TestDetails} returns this
 */
proto.reports.TestDetails.prototype.clearRetriesList = function() {
  return this.setRetriesList([]);
};


/**
 * optional double approximateCost = 7;
 * @return {number}
 */
proto.reports.TestDetails.prototype.getApproximatecost = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.reports.TestDetails} returns this
 */
proto.reports.TestDetails.prototype.setApproximatecost = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string currencySymbol = 8;
 * @return {string}
 */
proto.reports.TestDetails.prototype.getCurrencysymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.reports.TestDetails} returns this
 */
proto.reports.TestDetails.prototype.setCurrencysymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string stackTrace = 9;
 * @return {string}
 */
proto.reports.TestDetails.prototype.getStacktrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.reports.TestDetails} returns this
 */
proto.reports.TestDetails.prototype.setStacktrace = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.reports.RetryDetails.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.reports.RetryDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.reports.RetryDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.reports.RetryDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reports.RetryDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    summaryprofile: (f = msg.getSummaryprofile()) && TestSummaryProfile_pb.TestSummaryProfile.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    screenshotsList: jspb.Message.toObjectList(msg.getScreenshotsList(),
    Artifact_pb.Artifact.toObject, includeInstance),
    othersList: jspb.Message.toObjectList(msg.getOthersList(),
    Artifact_pb.Artifact.toObject, includeInstance),
    approximatecost: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    currencysymbol: jspb.Message.getFieldWithDefault(msg, 6, ""),
    stacktrace: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.reports.RetryDetails}
 */
proto.reports.RetryDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.reports.RetryDetails;
  return proto.reports.RetryDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.reports.RetryDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.reports.RetryDetails}
 */
proto.reports.RetryDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new TestSummaryProfile_pb.TestSummaryProfile;
      reader.readMessage(value,TestSummaryProfile_pb.TestSummaryProfile.deserializeBinaryFromReader);
      msg.setSummaryprofile(value);
      break;
    case 2:
      var value = /** @type {!proto.tests.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new Artifact_pb.Artifact;
      reader.readMessage(value,Artifact_pb.Artifact.deserializeBinaryFromReader);
      msg.addScreenshots(value);
      break;
    case 4:
      var value = new Artifact_pb.Artifact;
      reader.readMessage(value,Artifact_pb.Artifact.deserializeBinaryFromReader);
      msg.addOthers(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setApproximatecost(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencysymbol(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStacktrace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.reports.RetryDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.reports.RetryDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.reports.RetryDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.reports.RetryDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSummaryprofile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      TestSummaryProfile_pb.TestSummaryProfile.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getScreenshotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      Artifact_pb.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getOthersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      Artifact_pb.Artifact.serializeBinaryToWriter
    );
  }
  f = message.getApproximatecost();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getCurrencysymbol();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStacktrace();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional tests.TestSummaryProfile summaryProfile = 1;
 * @return {?proto.tests.TestSummaryProfile}
 */
proto.reports.RetryDetails.prototype.getSummaryprofile = function() {
  return /** @type{?proto.tests.TestSummaryProfile} */ (
    jspb.Message.getWrapperField(this, TestSummaryProfile_pb.TestSummaryProfile, 1));
};


/**
 * @param {?proto.tests.TestSummaryProfile|undefined} value
 * @return {!proto.reports.RetryDetails} returns this
*/
proto.reports.RetryDetails.prototype.setSummaryprofile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.reports.RetryDetails} returns this
 */
proto.reports.RetryDetails.prototype.clearSummaryprofile = function() {
  return this.setSummaryprofile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.reports.RetryDetails.prototype.hasSummaryprofile = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional tests.Status status = 2;
 * @return {!proto.tests.Status}
 */
proto.reports.RetryDetails.prototype.getStatus = function() {
  return /** @type {!proto.tests.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.tests.Status} value
 * @return {!proto.reports.RetryDetails} returns this
 */
proto.reports.RetryDetails.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated tests.Artifact screenshots = 3;
 * @return {!Array<!proto.tests.Artifact>}
 */
proto.reports.RetryDetails.prototype.getScreenshotsList = function() {
  return /** @type{!Array<!proto.tests.Artifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, Artifact_pb.Artifact, 3));
};


/**
 * @param {!Array<!proto.tests.Artifact>} value
 * @return {!proto.reports.RetryDetails} returns this
*/
proto.reports.RetryDetails.prototype.setScreenshotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tests.Artifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tests.Artifact}
 */
proto.reports.RetryDetails.prototype.addScreenshots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tests.Artifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reports.RetryDetails} returns this
 */
proto.reports.RetryDetails.prototype.clearScreenshotsList = function() {
  return this.setScreenshotsList([]);
};


/**
 * repeated tests.Artifact others = 4;
 * @return {!Array<!proto.tests.Artifact>}
 */
proto.reports.RetryDetails.prototype.getOthersList = function() {
  return /** @type{!Array<!proto.tests.Artifact>} */ (
    jspb.Message.getRepeatedWrapperField(this, Artifact_pb.Artifact, 4));
};


/**
 * @param {!Array<!proto.tests.Artifact>} value
 * @return {!proto.reports.RetryDetails} returns this
*/
proto.reports.RetryDetails.prototype.setOthersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.tests.Artifact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tests.Artifact}
 */
proto.reports.RetryDetails.prototype.addOthers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tests.Artifact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.reports.RetryDetails} returns this
 */
proto.reports.RetryDetails.prototype.clearOthersList = function() {
  return this.setOthersList([]);
};


/**
 * optional double approximateCost = 5;
 * @return {number}
 */
proto.reports.RetryDetails.prototype.getApproximatecost = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.reports.RetryDetails} returns this
 */
proto.reports.RetryDetails.prototype.setApproximatecost = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string currencySymbol = 6;
 * @return {string}
 */
proto.reports.RetryDetails.prototype.getCurrencysymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.reports.RetryDetails} returns this
 */
proto.reports.RetryDetails.prototype.setCurrencysymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string stackTrace = 7;
 * @return {string}
 */
proto.reports.RetryDetails.prototype.getStacktrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.reports.RetryDetails} returns this
 */
proto.reports.RetryDetails.prototype.setStacktrace = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


goog.object.extend(exports, proto.reports);
