// source: Work.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var AtomicTest_pb = require('./AtomicTest_pb.js');
goog.object.extend(proto, AtomicTest_pb);
var SampleFrequency_pb = require('./SampleFrequency_pb.js');
goog.object.extend(proto, SampleFrequency_pb);
goog.exportSymbol('proto.work.RemoteFile', null, global);
goog.exportSymbol('proto.work.ScreenOrientation', null, global);
goog.exportSymbol('proto.work.TestType', null, global);
goog.exportSymbol('proto.work.Work', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.work.Work = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.work.Work.repeatedFields_, null);
};
goog.inherits(proto.work.Work, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.work.Work.displayName = 'proto.work.Work';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.work.RemoteFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.work.RemoteFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.work.RemoteFile.displayName = 'proto.work.RemoteFile';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.work.Work.repeatedFields_ = [13,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.work.Work.prototype.toObject = function(opt_includeInstance) {
  return proto.work.Work.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.work.Work} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.work.Work.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    packagename: jspb.Message.getFieldWithDefault(msg, 18, ""),
    testpackagename: jspb.Message.getFieldWithDefault(msg, 19, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    payload: (f = msg.getPayload()) && proto.work.RemoteFile.toObject(includeInstance, f),
    timeout: jspb.Message.getFieldWithDefault(msg, 4, 0),
    locale: jspb.Message.getFieldWithDefault(msg, 5, ""),
    orientation: jspb.Message.getFieldWithDefault(msg, 6, 0),
    environmentvariablesMap: (f = msg.getEnvironmentvariablesMap()) ? f.toObject(includeInstance, undefined) : [],
    numretriesperdevice: jspb.Message.getFieldWithDefault(msg, 9, 0),
    numtestretries: jspb.Message.getFieldWithDefault(msg, 27, 0),
    isperformancemonitoringenabled: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    samplefrequency: jspb.Message.getFieldWithDefault(msg, 24, 0),
    isvideorecordingenabled: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    testrunnerclassname: jspb.Message.getFieldWithDefault(msg, 12, ""),
    testtargetsList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    testsList: jspb.Message.toObjectList(msg.getTestsList(),
    AtomicTest_pb.AtomicTest.toObject, includeInstance),
    isisolated: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    shouldclearpackagedata: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    obscurescreen: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    takewindowautoshots: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    retrieveappfiles: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    retrievetestfiles: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    usesystemprofiler: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    autoscreenshotfps: jspb.Message.getFieldWithDefault(msg, 25, 0),
    autoscreenshotquality: jspb.Message.getFieldWithDefault(msg, 26, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.work.Work}
 */
proto.work.Work.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.work.Work;
  return proto.work.Work.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.work.Work} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.work.Work}
 */
proto.work.Work.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackagename(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestpackagename(value);
      break;
    case 2:
      var value = /** @type {!proto.work.TestType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = new proto.work.RemoteFile;
      reader.readMessage(value,proto.work.RemoteFile.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimeout(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocale(value);
      break;
    case 6:
      var value = /** @type {!proto.work.ScreenOrientation} */ (reader.readEnum());
      msg.setOrientation(value);
      break;
    case 8:
      var value = msg.getEnvironmentvariablesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumretriesperdevice(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumtestretries(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsperformancemonitoringenabled(value);
      break;
    case 24:
      var value = /** @type {!proto.stats.SampleFrequency} */ (reader.readEnum());
      msg.setSamplefrequency(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsvideorecordingenabled(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestrunnerclassname(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addTesttargets(value);
      break;
    case 14:
      var value = new AtomicTest_pb.AtomicTest;
      reader.readMessage(value,AtomicTest_pb.AtomicTest.deserializeBinaryFromReader);
      msg.addTests(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsisolated(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShouldclearpackagedata(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setObscurescreen(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTakewindowautoshots(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRetrieveappfiles(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRetrievetestfiles(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsesystemprofiler(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAutoscreenshotfps(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAutoscreenshotquality(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.work.Work.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.work.Work.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.work.Work} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.work.Work.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPackagename();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getTestpackagename();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.work.RemoteFile.serializeBinaryToWriter
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getLocale();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOrientation();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getEnvironmentvariablesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getNumretriesperdevice();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getNumtestretries();
  if (f !== 0) {
    writer.writeInt32(
      27,
      f
    );
  }
  f = message.getIsperformancemonitoringenabled();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getSamplefrequency();
  if (f !== 0.0) {
    writer.writeEnum(
      24,
      f
    );
  }
  f = message.getIsvideorecordingenabled();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getTestrunnerclassname();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTesttargetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getTestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      AtomicTest_pb.AtomicTest.serializeBinaryToWriter
    );
  }
  f = message.getIsisolated();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getShouldclearpackagedata();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getObscurescreen();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getTakewindowautoshots();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getRetrieveappfiles();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getRetrievetestfiles();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getUsesystemprofiler();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getAutoscreenshotfps();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getAutoscreenshotquality();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.work.Work.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string packageName = 18;
 * @return {string}
 */
proto.work.Work.prototype.getPackagename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setPackagename = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string testPackageName = 19;
 * @return {string}
 */
proto.work.Work.prototype.getTestpackagename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setTestpackagename = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional TestType type = 2;
 * @return {!proto.work.TestType}
 */
proto.work.Work.prototype.getType = function() {
  return /** @type {!proto.work.TestType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.work.TestType} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional RemoteFile payload = 3;
 * @return {?proto.work.RemoteFile}
 */
proto.work.Work.prototype.getPayload = function() {
  return /** @type{?proto.work.RemoteFile} */ (
    jspb.Message.getWrapperField(this, proto.work.RemoteFile, 3));
};


/**
 * @param {?proto.work.RemoteFile|undefined} value
 * @return {!proto.work.Work} returns this
*/
proto.work.Work.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.work.Work.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 timeout = 4;
 * @return {number}
 */
proto.work.Work.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string locale = 5;
 * @return {string}
 */
proto.work.Work.prototype.getLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setLocale = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional ScreenOrientation orientation = 6;
 * @return {!proto.work.ScreenOrientation}
 */
proto.work.Work.prototype.getOrientation = function() {
  return /** @type {!proto.work.ScreenOrientation} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.work.ScreenOrientation} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setOrientation = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * map<string, string> environmentVariables = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.work.Work.prototype.getEnvironmentvariablesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.clearEnvironmentvariablesMap = function() {
  this.getEnvironmentvariablesMap().clear();
  return this;};


/**
 * optional int32 numRetriesPerDevice = 9;
 * @return {number}
 */
proto.work.Work.prototype.getNumretriesperdevice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setNumretriesperdevice = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 numTestRetries = 27;
 * @return {number}
 */
proto.work.Work.prototype.getNumtestretries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setNumtestretries = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional bool isPerformanceMonitoringEnabled = 10;
 * @return {boolean}
 */
proto.work.Work.prototype.getIsperformancemonitoringenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setIsperformancemonitoringenabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional stats.SampleFrequency sampleFrequency = 24;
 * @return {!proto.stats.SampleFrequency}
 */
proto.work.Work.prototype.getSamplefrequency = function() {
  return /** @type {!proto.stats.SampleFrequency} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {!proto.stats.SampleFrequency} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setSamplefrequency = function(value) {
  return jspb.Message.setProto3EnumField(this, 24, value);
};


/**
 * optional bool isVideoRecordingEnabled = 11;
 * @return {boolean}
 */
proto.work.Work.prototype.getIsvideorecordingenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setIsvideorecordingenabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string testRunnerClassName = 12;
 * @return {string}
 */
proto.work.Work.prototype.getTestrunnerclassname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setTestrunnerclassname = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated string testTargets = 13;
 * @return {!Array<string>}
 */
proto.work.Work.prototype.getTesttargetsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setTesttargetsList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.addTesttargets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.clearTesttargetsList = function() {
  return this.setTesttargetsList([]);
};


/**
 * repeated tests.AtomicTest tests = 14;
 * @return {!Array<!proto.tests.AtomicTest>}
 */
proto.work.Work.prototype.getTestsList = function() {
  return /** @type{!Array<!proto.tests.AtomicTest>} */ (
    jspb.Message.getRepeatedWrapperField(this, AtomicTest_pb.AtomicTest, 14));
};


/**
 * @param {!Array<!proto.tests.AtomicTest>} value
 * @return {!proto.work.Work} returns this
*/
proto.work.Work.prototype.setTestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.tests.AtomicTest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tests.AtomicTest}
 */
proto.work.Work.prototype.addTests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.tests.AtomicTest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.clearTestsList = function() {
  return this.setTestsList([]);
};


/**
 * optional bool isIsolated = 15;
 * @return {boolean}
 */
proto.work.Work.prototype.getIsisolated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setIsisolated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool shouldClearPackageData = 16;
 * @return {boolean}
 */
proto.work.Work.prototype.getShouldclearpackagedata = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setShouldclearpackagedata = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool obscureScreen = 17;
 * @return {boolean}
 */
proto.work.Work.prototype.getObscurescreen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setObscurescreen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool takeWindowAutoShots = 20;
 * @return {boolean}
 */
proto.work.Work.prototype.getTakewindowautoshots = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setTakewindowautoshots = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool retrieveAppFiles = 21;
 * @return {boolean}
 */
proto.work.Work.prototype.getRetrieveappfiles = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setRetrieveappfiles = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool retrieveTestFiles = 22;
 * @return {boolean}
 */
proto.work.Work.prototype.getRetrievetestfiles = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setRetrievetestfiles = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool useSystemProfiler = 23;
 * @return {boolean}
 */
proto.work.Work.prototype.getUsesystemprofiler = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setUsesystemprofiler = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional int32 autoScreenShotFps = 25;
 * @return {number}
 */
proto.work.Work.prototype.getAutoscreenshotfps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setAutoscreenshotfps = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional int32 autoScreenShotQuality = 26;
 * @return {number}
 */
proto.work.Work.prototype.getAutoscreenshotquality = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.work.Work} returns this
 */
proto.work.Work.prototype.setAutoscreenshotquality = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.work.RemoteFile.prototype.toObject = function(opt_includeInstance) {
  return proto.work.RemoteFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.work.RemoteFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.work.RemoteFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sizebytes: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lastmodified: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.work.RemoteFile}
 */
proto.work.RemoteFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.work.RemoteFile;
  return proto.work.RemoteFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.work.RemoteFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.work.RemoteFile}
 */
proto.work.RemoteFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSizebytes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastmodified(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.work.RemoteFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.work.RemoteFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.work.RemoteFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.work.RemoteFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSizebytes();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLastmodified();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.work.RemoteFile.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.work.RemoteFile} returns this
 */
proto.work.RemoteFile.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 sizeBytes = 2;
 * @return {number}
 */
proto.work.RemoteFile.prototype.getSizebytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.work.RemoteFile} returns this
 */
proto.work.RemoteFile.prototype.setSizebytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 lastModified = 3;
 * @return {number}
 */
proto.work.RemoteFile.prototype.getLastmodified = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.work.RemoteFile} returns this
 */
proto.work.RemoteFile.prototype.setLastmodified = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.work.TestType = {
  INSTRUMENTATION: 0
};

/**
 * @enum {number}
 */
proto.work.ScreenOrientation = {
  PORTRAIT: 0,
  LANDSCAPE: 1
};

goog.object.extend(exports, proto.work);
