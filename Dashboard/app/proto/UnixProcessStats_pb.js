// source: UnixProcessStats.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.stats.UnixProcessStats', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stats.UnixProcessStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stats.UnixProcessStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stats.UnixProcessStats.displayName = 'proto.stats.UnixProcessStats';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stats.UnixProcessStats.prototype.toObject = function(opt_includeInstance) {
  return proto.stats.UnixProcessStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stats.UnixProcessStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stats.UnixProcessStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numminorfaults: jspb.Message.getFieldWithDefault(msg, 2, 0),
    numchildminorfaults: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nummajorfaults: jspb.Message.getFieldWithDefault(msg, 4, 0),
    numchildmajorfaults: jspb.Message.getFieldWithDefault(msg, 5, 0),
    usertime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    systemtime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    childusertime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    childsystemtime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    virtualmemorysize: jspb.Message.getFieldWithDefault(msg, 10, 0),
    rss: jspb.Message.getFieldWithDefault(msg, 11, 0),
    lastcpuexecutednumber: jspb.Message.getFieldWithDefault(msg, 12, 0),
    aggregatedblockiodelaysinticks: jspb.Message.getFieldWithDefault(msg, 13, 0),
    relativetime: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stats.UnixProcessStats}
 */
proto.stats.UnixProcessStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stats.UnixProcessStats;
  return proto.stats.UnixProcessStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stats.UnixProcessStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stats.UnixProcessStats}
 */
proto.stats.UnixProcessStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumminorfaults(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumchildminorfaults(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNummajorfaults(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNumchildmajorfaults(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUsertime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSystemtime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChildusertime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChildsystemtime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVirtualmemorysize(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRss(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLastcpuexecutednumber(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAggregatedblockiodelaysinticks(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRelativetime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stats.UnixProcessStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stats.UnixProcessStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stats.UnixProcessStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stats.UnixProcessStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumminorfaults();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNumchildminorfaults();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNummajorfaults();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getNumchildmajorfaults();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getUsertime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getSystemtime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getChildusertime();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getChildsystemtime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getVirtualmemorysize();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getRss();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getLastcpuexecutednumber();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getAggregatedblockiodelaysinticks();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getRelativetime();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
};


/**
 * optional string state = 1;
 * @return {string}
 */
proto.stats.UnixProcessStats.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 numMinorFaults = 2;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getNumminorfaults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setNumminorfaults = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 numChildMinorFaults = 3;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getNumchildminorfaults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setNumchildminorfaults = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 numMajorFaults = 4;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getNummajorfaults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setNummajorfaults = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 numChildMajorFaults = 5;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getNumchildmajorfaults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setNumchildmajorfaults = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 userTime = 6;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getUsertime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setUsertime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 systemTime = 7;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getSystemtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setSystemtime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 childUserTime = 8;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getChildusertime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setChildusertime = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 childSystemTime = 9;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getChildsystemtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setChildsystemtime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 virtualMemorySize = 10;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getVirtualmemorysize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setVirtualmemorysize = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 rss = 11;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getRss = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setRss = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 lastCpuExecutedNumber = 12;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getLastcpuexecutednumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setLastcpuexecutednumber = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 aggregatedBlockIoDelaysInTicks = 13;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getAggregatedblockiodelaysinticks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setAggregatedblockiodelaysinticks = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 relativeTime = 14;
 * @return {number}
 */
proto.stats.UnixProcessStats.prototype.getRelativetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.stats.UnixProcessStats} returns this
 */
proto.stats.UnixProcessStats.prototype.setRelativetime = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


goog.object.extend(exports, proto.stats);
